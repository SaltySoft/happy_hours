//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18047
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HappyHours.ServiceReferenceHappyHours {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceHappyHours.IServiceClientHappyHours")]
    public interface IServiceClientHappyHours {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClientHappyHours/DoWork", ReplyAction="http://tempuri.org/IServiceClientHappyHours/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClientHappyHours/DoWork", ReplyAction="http://tempuri.org/IServiceClientHappyHours/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClientHappyHours/GetListUser", ReplyAction="http://tempuri.org/IServiceClientHappyHours/GetListUserResponse")]
        HhDataLayer.DBO.User[] GetListUser(int max);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClientHappyHours/GetListUser", ReplyAction="http://tempuri.org/IServiceClientHappyHours/GetListUserResponse")]
        System.Threading.Tasks.Task<HhDataLayer.DBO.User[]> GetListUserAsync(int max);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClientHappyHours/GetUser", ReplyAction="http://tempuri.org/IServiceClientHappyHours/GetUserResponse")]
        HhDataLayer.DBO.User[] GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClientHappyHours/GetUser", ReplyAction="http://tempuri.org/IServiceClientHappyHours/GetUserResponse")]
        System.Threading.Tasks.Task<HhDataLayer.DBO.User[]> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClientHappyHours/Test", ReplyAction="http://tempuri.org/IServiceClientHappyHours/TestResponse")]
        string Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClientHappyHours/Test", ReplyAction="http://tempuri.org/IServiceClientHappyHours/TestResponse")]
        System.Threading.Tasks.Task<string> TestAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceClientHappyHoursChannel : HappyHours.ServiceReferenceHappyHours.IServiceClientHappyHours, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClientHappyHoursClient : System.ServiceModel.ClientBase<HappyHours.ServiceReferenceHappyHours.IServiceClientHappyHours>, HappyHours.ServiceReferenceHappyHours.IServiceClientHappyHours {
        
        public ServiceClientHappyHoursClient() {
        }
        
        public ServiceClientHappyHoursClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClientHappyHoursClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClientHappyHoursClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClientHappyHoursClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public HhDataLayer.DBO.User[] GetListUser(int max) {
            return base.Channel.GetListUser(max);
        }
        
        public System.Threading.Tasks.Task<HhDataLayer.DBO.User[]> GetListUserAsync(int max) {
            return base.Channel.GetListUserAsync(max);
        }
        
        public HhDataLayer.DBO.User[] GetUser(int id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<HhDataLayer.DBO.User[]> GetUserAsync(int id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public string Test() {
            return base.Channel.Test();
        }
        
        public System.Threading.Tasks.Task<string> TestAsync() {
            return base.Channel.TestAsync();
        }
    }
}
